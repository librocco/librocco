name: Checks
"on":
  push:
    branches-ignore:
    - ci-debug/*
    - wip/**
jobs:
  js-search-test:
    name: JS-Search Tests
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      id-token: write
      contents: read
      checks: write
    steps:
    - name: Checkout repository and submodules
      uses: actions/checkout@v4
      with:
        submodules: recursive
        lfs: true
    - uses: actions/setup-node@v4
      with:
        node-version: "20"
    - name: Cache node modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.rush
          ~/.pnpm-store
          common/temp
          ./common/temp/node_modules/
        key: ${{ runner.os }}-modules-node16-v2-${{ hashFiles('**/pnpm-lock.yaml') }}
    - name: Add local rush scripts to PATH
      run: echo "${PWD}"/common/scripts >> $GITHUB_PATH
    - name: Install packages
      run: rush update
    - name: Build packages
      run: rush build
    - name: Run tests
      run: cd pkg/js-search && rushx test:ci
    - name: Test Report
      uses: dorny/test-reporter@v1
      if: success() || failure()
      with:
        name: JS-Search Tests
        path: pkg/js-search/junit.xml
        reporter: jest-junit
  book-data-extension-test:
    name: Book data extension Tests
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      id-token: write
      contents: read
      checks: write
    steps:
    - name: Checkout repository and submodules
      uses: actions/checkout@v4
      with:
        submodules: recursive
        lfs: true
    - uses: actions/setup-node@v4
      with:
        node-version: "20"
    - name: Cache node modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.rush
          ~/.pnpm-store
          common/temp
          ./common/temp/node_modules/
        key: ${{ runner.os }}-modules-node16-v2-${{ hashFiles('**/pnpm-lock.yaml') }}
    - name: Add local rush scripts to PATH
      run: echo "${PWD}"/common/scripts >> $GITHUB_PATH
    - name: Install packages
      run: rush update
    - name: Build packages
      run: rush build
    - name: Run tests
      run: cd plugins/book-data-extension && rushx test:ci
  web-client-test:
    name: Web Client Tests
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      id-token: write
      contents: read
      checks: write
    steps:
    - name: Checkout repository and submodules
      uses: actions/checkout@v4
      with:
        submodules: recursive
        lfs: true
    - uses: actions/setup-node@v4
      with:
        node-version: "20"
    - name: Cache node modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.rush
          ~/.pnpm-store
          common/temp
          ./common/temp/node_modules/
        key: ${{ runner.os }}-modules-node16-v2-${{ hashFiles('**/pnpm-lock.yaml') }}
    - name: Add local rush scripts to PATH
      run: echo "${PWD}"/common/scripts >> $GITHUB_PATH
    - name: Install packages
      run: rush update
    - name: Build packages
      run: rush build
    - name: Run tests
      run: cd apps/web-client && rushx test:ci
  e2e-test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        shardIndex:
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        shardTotal:
        - 6
    steps:
    - name: Checkout repository and submodules
      uses: actions/checkout@v4
      with:
        submodules: recursive
        lfs: true
    - uses: actions/setup-node@v4
      with:
        node-version: "20"
    - name: Cache node modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.rush
          ~/.pnpm-store
          common/temp
          ./common/temp/node_modules/
        key: ${{ runner.os }}-modules-node16-v2-${{ hashFiles('**/pnpm-lock.yaml') }}
    - name: Add local rush scripts to PATH
      run: echo "${PWD}"/common/scripts >> $GITHUB_PATH
    - name: Install packages
      run: rush update
    - name: Build packages
      run: rush build
    - name: Build the app
      run: cd apps/web-client && rushx build:e2e
    - name: Download playwright browsers
      run: cd apps/e2e && npx playwright install
    - name: Run Playwright tests (shard ${{ matrix.shardIndex }}/${{ matrix.shardTotal }})
      run: cd apps/e2e && rushx test:ci
      env:
        PLAYWRIGHT_OPTIONS: --shard=${{ matrix.shardIndex }}/${{ matrix.shardTotal }}
    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: e2e-blob-report-${{ matrix.shardIndex }}
        path: apps/e2e/blob-report
        retention-days: 2
  lint-and-typecheck:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      id-token: write
      contents: read
      checks: write
    steps:
    - name: Checkout repository and submodules
      uses: actions/checkout@v4
      with:
        submodules: recursive
        lfs: true
    - uses: actions/setup-node@v4
      with:
        node-version: "20"
    - name: Cache node modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.rush
          ~/.pnpm-store
          common/temp
          ./common/temp/node_modules/
        key: ${{ runner.os }}-modules-node16-v2-${{ hashFiles('**/pnpm-lock.yaml') }}
    - name: Add local rush scripts to PATH
      run: echo "${PWD}"/common/scripts >> $GITHUB_PATH
    - name: Install packages
      run: rush update
    - name: Build packages
      run: rush build
    - name: Lint all the packages
      run: rush lint:strict
    - name: Typecheck all the packages
      if: success() || failure()
      run: rush typecheck
  check-i18n-sync:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      id-token: write
      contents: read
      checks: write
    steps:
    - name: Checkout repository and submodules
      uses: actions/checkout@v4
      with:
        submodules: recursive
        lfs: true
    - uses: actions/setup-node@v4
      with:
        node-version: "20"
    - name: Cache node modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.rush
          ~/.pnpm-store
          common/temp
          ./common/temp/node_modules/
        key: ${{ runner.os }}-modules-node16-v2-${{ hashFiles('**/pnpm-lock.yaml') }}
    - name: Add local rush scripts to PATH
      run: echo "${PWD}"/common/scripts >> $GITHUB_PATH
    - name: Install packages
      run: rush update
    - name: Build packages
      run: rush build
    - name: Run the check
      run: cd apps/web-client && rushx typesafe-i18n-check
  perform-monorepo-checks:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
    - name: Checkout repository and submodules
      uses: actions/checkout@v4
      with:
        submodules: recursive
        lfs: true
    - uses: actions/setup-node@v4
      with:
        node-version: "20"
    - name: Cache node modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.rush
          ~/.pnpm-store
          common/temp
          ./common/temp/node_modules/
        key: ${{ runner.os }}-modules-node16-v2-${{ hashFiles('**/pnpm-lock.yaml') }}
    - name: Add local rush scripts to PATH
      run: echo "${PWD}"/common/scripts >> $GITHUB_PATH
    - name: Install packages
      run: rush update
    - name: Build packages
      run: rush build
    - name: Check for unlisted artifacts in 'apps' and 'pkg' folders
      run: rush check-workspace-projects
  deploy-production:
    name: Deploy web-client app to bunny cdn
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository and submodules
      uses: actions/checkout@v4
      with:
        submodules: recursive
        lfs: true
    - uses: actions/setup-node@v4
      with:
        node-version: "20"
    - name: Cache node modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.rush
          ~/.pnpm-store
          common/temp
          ./common/temp/node_modules/
        key: ${{ runner.os }}-modules-node16-v2-${{ hashFiles('**/pnpm-lock.yaml') }}
    - name: Add local rush scripts to PATH
      run: echo "${PWD}"/common/scripts >> $GITHUB_PATH
    - name: Install packages
      run: rush update
    - name: Build packages
      run: rush build
    - name: Build web-client app using prefix ${{ github.head_ref || github.ref_name }}
      run: cd apps/web-client && rushx build:prod
      env:
        BASE_PATH: /${{ github.head_ref || github.ref_name }}
        SENTRY_ORG: code-myriad
        SENTRY_PROJECT: librocco
        SENTRY_URL: https://sentry.libroc.co
        SENTRY_AUTH_TOKEN: ${{ secrets.SETNRY_AUTH_TOKEN }}
        PUBLIC_SENTRY_DSN: ${{ secrets.PUBLIC_SENTRY_DSN }}
    - name: Install lftp
      run: |
        sudo apt-get update
        sudo apt-get install lftp
    - name: Copy built app to bunny storage zone
      run: |
        lftp -u librocco,"${BUNNY_STORAGE_PASSWORD}" storage.bunnycdn.com <<EOF
        set ftp:ssl-allow no
        set mirror:parallel-transfer-count 10
        mirror -R apps/web-client/build/ ${{ github.head_ref || github.ref_name }}
        EOF
      env:
        BUNNY_STORAGE_PASSWORD: ${{ secrets.BUNNY_STORAGE_PASSWORD }}
    - name: Purge bunny cache
      run: 'curl --request POST --url https://api.bunny.net/pullzone/1306302/purgeCache --header "content-type: application/json" --header "AccessKey: $BUNNY_API_KEY"'
      env:
        BUNNY_API_KEY: ${{ secrets.BUNNY_API_KEY }}
    - name: Output link to deployed app
      run: echo You can view the app on https://test.libroc.co/${{ github.head_ref || github.ref_name }}/index.html | tee -a $GITHUB_STEP_SUMMARY
  e2e-merge-report:
    if: ${{ !cancelled() }}
    needs:
    - e2e-test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository and submodules
      uses: actions/checkout@v4
      with:
        submodules: recursive
        lfs: true
    - uses: actions/setup-node@v4
      with:
        node-version: "20"
    - name: Download blob reports
      uses: actions/download-artifact@v4
      with:
        path: all-blob-reports
        pattern: e2e-blob-report-*
        merge-multiple: true
    - name: Merge to HTML report
      run: npx playwright merge-reports --reporter html ./all-blob-reports
    - name: Install lftp
      run: |
        sudo apt-get update
        sudo apt-get install lftp
    - name: Upload merged report to Bunny storage
      run: |
        lftp -u librocco,"${BUNNY_STORAGE_PASSWORD}" storage.bunnycdn.com <<EOF
        set ftp:ssl-allow no
        set mirror:parallel-transfer-count 10
        mirror -R playwright-report/ ${{ github.head_ref || github.ref_name }}/tests
        EOF
      env:
        BUNNY_STORAGE_PASSWORD: ${{ secrets.BUNNY_STORAGE_PASSWORD }}
    - name: Purge Bunny cache
      run: |
        curl --request POST --url https://api.bunny.net/pullzone/1306302/purgeCache \
             --header "content-type: application/json" \
             --header "AccessKey: $BUNNY_API_KEY"
      env:
        BUNNY_API_KEY: ${{ secrets.BUNNY_API_KEY }}
    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: e2e-merged-html-report
        path: playwright-report
        retention-days: 30
    - name: Output link to report
      run: echo "Merged e2e report https://test.libroc.co/${{ github.head_ref || github.ref_name }}/tests/index.html" | tee -a $GITHUB_STEP_SUMMARY
