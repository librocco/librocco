name: PlaywrightMatrix
"on":
  push:
    branches:
    - playwright-matrix/**
  schedule:
  - cron: 30 5 * * 1,3
jobs:
  build-cr-sqlite:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      rebuild: ${{ steps.ts.outputs.rebuild }}
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
        lfs: false
        fetch-depth: 0
    - name: Test if artefacts are stale
      id: ts
      shell: bash
      run: echo "rebuild=yes" >> "$GITHUB_OUTPUT"
    - uses: actions/setup-node@v4
      if: steps.ts.outputs.rebuild == 'yes'
      with:
        node-version: "20"
    - name: Install Rust 1.85.0
      if: steps.ts.outputs.rebuild == 'yes'
      uses: actions-rs/toolchain@v1
      with:
        toolchain: 1.85.0
        override: true
    - name: install wasm-pack
      if: steps.ts.outputs.rebuild == 'yes'
      run: cargo install wasm-pack
    - name: install pnpm
      if: steps.ts.outputs.rebuild == 'yes'
      run: npm install -g 'pnpm@<9'
    - name: Build cr-sqlite
      if: steps.ts.outputs.rebuild == 'yes'
      run: ./scripts/build_vlcn.sh
    - name: Check that the build went fine
      run: git status; ls -l 3rd-party/artefacts/
    - name: upload to later jobs
      if: steps.ts.outputs.rebuild == 'yes'
      uses: actions/upload-artifact@v4
      with:
        name: built-vlcn-artefacts
        path: 3rd-party/artefacts/
    - name: Mark cached version
      run: cp 3rd-party/artefacts_version.txt 3rd-party/artefacts/version-cached.txt
    - name: Commit updated assets
      if: github.ref == 'refs/heads/compile-assets'
      run: bash scripts/commit-artefacts.sh
    - name: Push changes
      if: github.ref == 'refs/heads/compile-assets'
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: compile-assets
  e2e-test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    needs: build-cr-sqlite
    strategy:
      fail-fast: false
      matrix:
        dummy1:
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        dummy2:
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
    steps:
    - name: Checkout repository and submodules
      uses: actions/checkout@v4
      with:
        submodules: recursive
        lfs: false
    - uses: actions/setup-node@v4
      with:
        node-version: "20"
    - uses: actions/download-artifact@v4
      with:
        name: built-vlcn-artefacts
        path: 3rd-party/artefacts
      if: ${{ !cancelled() && needs.build-cr-sqlite.outputs.rebuild == 'yes' }}
    - name: Load cached cr-sqlite artefacts
      uses: actions/cache/restore@v4
      with:
        path: 3rd-party/artefacts
        key: ${{ runner.os }}-cr-sqlite-artefacts-${{ hashFiles('3rd-party/artefacts_version.txt') }}
    - name: Cache node modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.rush
          ~/.pnpm-store
          common/temp
          ./common/temp/node_modules/
        key: ${{ runner.os }}-modules-node16-v2-${{ hashFiles('**/pnpm-lock.yaml') }}
    - name: Add local rush scripts to PATH
      run: echo "${PWD}"/common/scripts >> $GITHUB_PATH
    - name: Install packages
      run: rush update
    - name: Build packages
      run: rush build
    - name: Build the app
      run: cd apps/web-client && rushx build:e2e
    - name: Download playwright browsers
      run: cd apps/e2e && npx playwright install
    - name: Run Playwright tests
      run: cd apps/e2e && rushx test:ci
    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-test-results-${{ matrix.dummy1 }}-${{ matrix.dummy2 }}
        path: apps/e2e/test-results
        retention-days: 30
