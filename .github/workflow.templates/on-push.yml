#@ load("cache.lib.yml", "cache_node")
#@ load("rush.lib.yml", "rush_add_path")
#@ load("rush.lib.yml", "rush_install")
#@ load("rush.lib.yml", "rush_build")
#@ load("test-job.lib.yml", "test_job")

name: Checks

"on":
  push:
    branches-ignore:
      - "ci-debug/*"

jobs:
  js-search-test: #@ test_job("JS-Search Tests", "pkg/js-search", "jest-junit")

  book-data-extension-test: #@ test_job("Book data extension Tests", "plugins/book-data-extension")

  web-client-test: #@ test_job("Web Client Tests", "apps/web-client")

  e2e-test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
      -  #@ cache_node()
      -  #@ rush_add_path()
      -  #@ rush_install()
      -  #@ rush_build()
      - name: Build the app
        run: cd apps/web-client && rushx build:e2e
      - name: Download playwright browsers
        run: cd apps/e2e && npx playwright install
      - name: Run Playwright tests
        run: cd apps/e2e && rushx test:ci
      - name: Install lftp
        if: always()
        run: |
          [ -d apps/e2e/playwright-report ] || exit 0
          sudo apt-get update
          sudo apt-get install lftp
      - name: Copy playwright test result to bunny storage zone
        if: always()
        run: |
          [ -d apps/e2e/playwright-report ] || exit 0
          lftp -u librocco,"${BUNNY_STORAGE_PASSWORD}" storage.bunnycdn.com <<EOF
          set ftp:ssl-allow no
          set mirror:parallel-transfer-count 10
          mirror -R apps/e2e/playwright-report/ ${{ github.head_ref || github.ref_name }}/tests
          EOF
          echo Uploaded to https://test.libroc.co/${{ github.head_ref || github.ref_name }}/tests
        env:
          BUNNY_STORAGE_PASSWORD: ${{ secrets.BUNNY_STORAGE_PASSWORD }}
      - name: Purge bunny cache
        if: always()
        run: |
          [ -d apps/e2e/playwright-report ] || exit 0
          curl --request POST --url https://api.bunny.net/pullzone/1306302/purgeCache --header "content-type: application/json" --header "AccessKey: $BUNNY_API_KEY"
        env:
          BUNNY_API_KEY: ${{ secrets.BUNNY_API_KEY }}
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-test-results
          path: apps/e2e/test-results
          retention-days: 30

  lint-and-typecheck:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      id-token: write
      contents: read
      checks: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
      -  #@ cache_node()
      -  #@ rush_add_path()
      -  #@ rush_install()
      -  #@ rush_build()
      - name: Lint all the packages
        run: rush lint:strict
      - name: Typecheck all the packages
        #! Run typecheck even if linting fails
        if: success() || failure()
        run: rush typecheck

  check-i18n-sync:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      id-token: write
      contents: read
      checks: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
      -  #@ cache_node()
      -  #@ rush_add_path()
      -  #@ rush_install()
      -  #@ rush_build()
      - name: Run the check
        run: cd apps/web-client && rushx typesafe-i18n-check

  perform-monorepo-checks:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
      -  #@ cache_node()
      -  #@ rush_add_path()
      -  #@ rush_install()
      -  #@ rush_build()
      - name: Check for unlisted artifacts in 'apps' and 'pkg' folders
        run: rush check-workspace-projects

  deploy-production:
    name: Deploy web-client app to bunny cdn
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
      -  #@ cache_node()
      -  #@ rush_add_path()
      -  #@ rush_install()
      -  #@ rush_build()
      - name: Build web-client app using prefix ${{ github.head_ref || github.ref_name }}
        run: cd apps/web-client && rushx build:prod
        env:
          BASE_PATH: /${{ github.head_ref || github.ref_name }}
          SENTRY_ORG: code-myriad
          SENTRY_PROJECT: librocco
          SENTRY_URL: https://sentry.libroc.co
          SENTRY_AUTH_TOKEN: ${{ secrets.SETNRY_AUTH_TOKEN }}
      - name: Install lftp
        run: |
          sudo apt-get update
          sudo apt-get install lftp
      - name: Copy built app to bunny storage zone
        run: |
          lftp -u librocco,"${BUNNY_STORAGE_PASSWORD}" storage.bunnycdn.com <<EOF
          set ftp:ssl-allow no
          set mirror:parallel-transfer-count 10
          mirror -R apps/web-client/build/ ${{ github.head_ref || github.ref_name }}
          EOF
        env:
          BUNNY_STORAGE_PASSWORD: ${{ secrets.BUNNY_STORAGE_PASSWORD }}
      - name: Purge bunny cache
        run: 'curl --request POST --url https://api.bunny.net/pullzone/1306302/purgeCache --header "content-type: application/json" --header "AccessKey: $BUNNY_API_KEY"'
        env:
          BUNNY_API_KEY: ${{ secrets.BUNNY_API_KEY }}
      - name: Output link to deployed app
        run: echo You can view the app on https://test.libroc.co/${{ github.head_ref || github.ref_name }}/index.html | tee -a $GITHUB_STEP_SUMMARY
